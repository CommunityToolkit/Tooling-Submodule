<Project InitialTargets="EnsureNoEnabledMultiTargetsWithMissingTfms">
  <Target Name="EnsureNoEnabledMultiTargetsWithMissingTfms">
    <Error Condition="$(MultiTarget.Contains('uwp')) == 'true' AND '$(UwpTargetFramework)' == ''" Text="Attempted to build a project with a uwp MultiTarget, but the corresponding TargetFramework is not enabled. Please use ./tooling/MultiTarget/UseTargetFrameworks.ps1 to enable this TFM, then regenerate your solution and try again." />

    <Error Condition="$(MultiTarget.Contains('wasdk')) == 'true' AND '$(WinAppSdkTargetFramework)' == ''" Text="Attempted to build a project with a wasdk MultiTarget, but the corresponding TargetFramework is not enabled. Please use ./tooling/MultiTarget/UseTargetFrameworks.ps1 to enable this TFM, then regenerate your solution and try again." />

    <Error Condition="$(MultiTarget.Contains('wasm')) == 'true' AND '$(NetCoreCommonTargetFramework)' == ''" Text="Attempted to build a project with a wasm MultiTarget, but the corresponding TargetFramework is not enabled. Please use ./tooling/MultiTarget/UseTargetFrameworks.ps1 to enable this TFM, then regenerate your solution and try again." />

    <Error Condition="$(MultiTarget.Contains('macos')) == 'true' AND '$(NetCoreCommonTargetFramework)' == ''" Text="Attempted to build a project with a macos MultiTarget, but the corresponding TargetFramework is not enabled. Please use ./tooling/MultiTarget/UseTargetFrameworks.ps1 to enable this TFM, then regenerate your solution and try again." />

    <Error Condition="$(MultiTarget.Contains('ios')) == 'true' AND '$(NetCoreCommonTargetFramework)' == ''" Text="Attempted to build an project with an ios MultiTarget, but the corresponding TargetFramework is not enabled. Please use ./tooling/MultiTarget/UseTargetFrameworks.ps1 to enable this TFM, then regenerate your solution and try again." />

    <Error Condition="$(MultiTarget.Contains('android')) == 'true' AND '$(NetCoreCommonTargetFramework)' == ''" Text="Attempted to build a project with an android MultiTarget, but the corresponding TargetFramework is not enabled. Please use ./tooling/MultiTarget/UseTargetFrameworks.ps1 to enable this TFM, then regenerate your solution and try again." />

    <Error Condition="$(MultiTarget.Contains('netstandard')) == 'true' AND '$(NetStandardCommonTargetFramework)' == ''" Text="Attempted to build a project with a netstandard MultiTarget, but the corresponding TargetFramework is not enabled. Please use ./tooling/MultiTarget/UseTargetFrameworks.ps1 to enable this TFM, then regenerate your solution and try again." />
  </Target>
  <PropertyGroup>
    <!--
      MultiTarget is a custom property that indicates which target a project is designed to be built for / run on.
      Used to create project references, generate solution files, enable/disable TargetFrameworks, and build nuget packages.
    -->
    <TargetFrameworks Condition="$(MultiTarget.Contains('uwp')) == 'true'">$(TargetFrameworks);$(UwpTargetFramework)</TargetFrameworks>
    <TargetFrameworks Condition="$(MultiTarget.Contains('wasdk')) == 'true'">$(TargetFrameworks);$(WinAppSdkTargetFramework)</TargetFrameworks>

    <!--
      TargetFrameworks for WasmLibTargetFramework, WpfLibTargetFramework, and LinuxLibTargetFramework all use the same value.
      Duplicate values can't be removed during the evaluation phase without breaking things, so we use a single value for all that need it.
    -->
    <TargetFrameworks Condition="$(MultiTarget.Contains('wasm')) == 'true' OR $(MultiTarget.Contains('wpf')) == 'true' OR $(MultiTarget.Contains('linuxgtk')) == 'true'">$(TargetFrameworks);$(NetCoreCommonTargetFramework)</TargetFrameworks>
    <TargetFrameworks Condition="$(MultiTarget.Contains('macos')) == 'true'">$(TargetFrameworks);$(MacOSLibTargetFramework)</TargetFrameworks>
    <TargetFrameworks Condition="$(MultiTarget.Contains('ios')) == 'true'">$(TargetFrameworks);$(iOSLibTargetFramework)</TargetFrameworks>
    <TargetFrameworks Condition="$(MultiTarget.Contains('android')) == 'true'">$(TargetFrameworks);$(AndroidLibTargetFramework)</TargetFrameworks>

    <TargetFrameworks Condition="$(MultiTarget.Contains('netstandard')) == 'true'">$(TargetFrameworks);$(NetStandardCommonTargetFramework)</TargetFrameworks>
  </PropertyGroup>
</Project>
