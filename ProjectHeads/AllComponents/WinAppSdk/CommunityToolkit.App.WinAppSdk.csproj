<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <IsDeployableHead>true</IsDeployableHead>
    <IsWinAppSdk>true</IsWinAppSdk>
    <HasWinUI>true</HasWinUI>
    <WinUIMajorVersion>3</WinUIMajorVersion>
    
    <IsAllExperimentHead>true</IsAllExperimentHead>
  </PropertyGroup>

  <Import Project="$(ToolingDirectory)\MultiTarget\EnabledTargetFrameworks.props" />
  <Import Project="$(ToolingDirectory)\MultiTarget\DefinedConstants.props" />
  <Import Project="$(ToolingDirectory)\MultiTarget\Generated\*.props" />
  <Import Project="$(ToolingDirectory)\ProjectHeads\App.Head.WinAppSdk.props" />

  <PropertyGroup>
    <RootNamepace>CommunityToolkit.App.WinAppSdk</RootNamepace>
    <GenerateAppInstallerFile>False</GenerateAppInstallerFile>
    <AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
    <PackageCertificateKeyFile>CommunityToolkit.App.WinAppSdk_TemporaryKey.pfx</PackageCertificateKeyFile>
    <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
    <AppxAutoIncrementPackageRevision>True</AppxAutoIncrementPackageRevision>
    <AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>
    <GenerateTestArtifacts>True</GenerateTestArtifacts>
    <AppxBundle>Auto</AppxBundle>
    <AppxBundlePlatforms>x64</AppxBundlePlatforms>
    <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
  </PropertyGroup>

  <!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
         Tools extension to be activated for this project even if the Windows App SDK Nuget
         package has not yet been restored -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>

</Project>
