<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
                    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
                    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
                    xmlns:local="using:CommunityToolkit.App.Shared.Controls"
                    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
                    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation">


    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <StaticResource x:Key="TitleBarForegroundBrush"
                            ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TitleBarDeactivatedForegroundBrush"
                            ResourceKey="TextFillColorTertiaryBrush" />

            <!--  These colors cannot have an alpha channel, so they are hardcoded opaque versions of TextFill colors  -->
            <Color x:Key="TitleBarButtonForegroundColor">#FFFFFF</Color>
            <!--  TextFillColorPrimary over SolidBackgroundFillColorBase  -->
            <Color x:Key="TitleBarButtonHoverForegroundColor">#FFFFFF</Color>
            <!--  TextFillColorPrimary over SolidBackgroundFillColorBase  -->
            <Color x:Key="TitleBarButtonPressedForegroundColor">#CFCFCF</Color>
            <!--  TextFillColorSecondary over SolidBackgroundFillColorBase  -->
            <Color x:Key="TitleBarButtonInactiveForegroundColor">#717171</Color>
            <!--  TextFillColorTertiary over SolidBackgroundFillColorBase  -->

            <StaticResource x:Key="TitleBarButtonBackgroundColor"
                            ResourceKey="SubtleFillColorTransparent" />
            <StaticResource x:Key="TitleBarButtonHoverBackgroundColor"
                            ResourceKey="SubtleFillColorSecondary" />
            <StaticResource x:Key="TitleBarButtonPressedBackgroundColor"
                            ResourceKey="SubtleFillColorTertiary" />

            <x:Double x:Key="TitleBarCompactHeight">32</x:Double>
            <x:Double x:Key="TitleBarExpandedHeight">48</x:Double>
        </ResourceDictionary>

        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="TitleBarForegroundBrush"
                            ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TitleBarDeactivatedForegroundBrush"
                            ResourceKey="TextFillColorTertiaryBrush" />

            <!--  These colors cannot have an alpha channel, so they are hardcoded opaque versions of TextFill colors  -->
            <Color x:Key="TitleBarButtonForegroundColor">#191919</Color>
            <!--  TextFillColorPrimary over SolidBackgroundFillColorBase  -->
            <Color x:Key="TitleBarButtonHoverForegroundColor">#191919</Color>
            <!--  TextFillColorPrimary over SolidBackgroundFillColorBase  -->
            <Color x:Key="TitleBarButtonPressedForegroundColor">#606060</Color>
            <!--  TextFillColorSecondary over SolidBackgroundFillColorBase  -->
            <Color x:Key="TitleBarButtonInactiveForegroundColor">#9b9b9b</Color>
            <!--  TextFillColorTertiary over SolidBackgroundFillColorBase  -->

            <StaticResource x:Key="TitleBarButtonBackgroundColor"
                            ResourceKey="SubtleFillColorTransparent" />
            <StaticResource x:Key="TitleBarButtonHoverBackgroundColor"
                            ResourceKey="SubtleFillColorSecondary" />
            <StaticResource x:Key="TitleBarButtonPressedBackgroundColor"
                            ResourceKey="SubtleFillColorTertiary" />

            <x:Double x:Key="TitleBarCompactHeight">32</x:Double>
            <x:Double x:Key="TitleBarExpandedHeight">48</x:Double>
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <StaticResource x:Key="TitleBarForegroundBrush"
                            ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TitleBarDeactivatedForegroundBrush"
                            ResourceKey="TextFillColorTertiaryBrush" />

            <StaticResource x:Key="TitleBarButtonForegroundColor"
                            ResourceKey="TextFillColorPrimary" />
            <StaticResource x:Key="TitleBarButtonHoverForegroundColor"
                            ResourceKey="TextFillColorPrimary" />
            <StaticResource x:Key="TitleBarButtonPressedForegroundColor"
                            ResourceKey="TextFillColorSecondary" />
            <StaticResource x:Key="TitleBarButtonInactiveForegroundColor"
                            ResourceKey="TextFillColorTertiary" />

            <StaticResource x:Key="TitleBarButtonBackgroundColor"
                            ResourceKey="SubtleFillColorTransparent" />
            <StaticResource x:Key="TitleBarButtonHoverBackgroundColor"
                            ResourceKey="SubtleFillColorSecondary" />
            <StaticResource x:Key="TitleBarButtonPressedBackgroundColor"
                            ResourceKey="SubtleFillColorTertiary" />

            <x:Double x:Key="TitleBarCompactHeight">32</x:Double>
            <x:Double x:Key="TitleBarExpandedHeight">48</x:Double>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>


    <!--  THIS XAML IS FROM WINUI TITLEBAR EXPERIMENT  -->
    <Style TargetType="local:TitleBar">
        <Setter Property="Height" Value="{ThemeResource TitleBarExpandedHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TitleBar">
                    <Grid Height="{TemplateBinding Height}"
                          Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LeftPaddingColumn"
                                              Width="0" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition x:Name="RightPaddingColumn"
                                              Width="0" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="BackButtonStates">
                                <VisualState x:Name="BackButtonVisible" />
                                <VisualState x:Name="BackButtonCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="PART_BackButton.Visibility" Value="Collapsed" />
                                        <Setter Target="PART_Icon.Margin" Value="16,0,0,0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaneButtonStates">
                                <VisualState x:Name="PaneButtonVisible" />
                                <VisualState x:Name="PaneButtonCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="PART_PaneButton.Visibility" Value="Collapsed" />
                                        <Setter Target="PART_Icon.Margin" Value="16,0,0,0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReflowStates">
                                <VisualState x:Name="Wide">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="850" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <!--  Adding left margin, so SearchBoxHolder is centered in the wide mode  -->
                                        <!--  Left margin = 220 (width of column 1) + 40 (space between SearchBoxHolder and UserProfileControl)  -->
                                        <Setter Target="PART_TitleText.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Narrow">
                                    <VisualState.StateTriggers>
                                        <AdaptiveTrigger MinWindowWidth="0" />
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="PART_TitleText.Visibility" Value="Collapsed" />
                                        <Setter Target="PART_SubTitleText.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Grid.Column="1" Padding="4,0,4,0">
                            <Grid.ColumnDefinitions>
                                <!--  0: Back button  -->
                                <ColumnDefinition Width="Auto" />
                                <!--  1: Menu button  -->
                                <ColumnDefinition Width="Auto" />
                                <!--  2: Icon  -->
                                <ColumnDefinition Width="Auto" />
                                <!--  3: Title  -->
                                <ColumnDefinition Width="Auto" />
                                <!--  4: Subtitle  -->
                                <ColumnDefinition Width="Auto" />
                                <!--  5: Content  -->
                                <ColumnDefinition Width="*" />
                                <!--  6: Footer  -->
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Viewbox x:Name="PART_Icon"
                                     Grid.Column="2"
                                     MaxWidth="16"
                                     MaxHeight="16"
                                     Margin="8,0,8,0"
                                     VerticalAlignment="Center">
                                <Image Source="{TemplateBinding Icon}" />
                            </Viewbox>

                            <TextBlock x:Name="PART_TitleText"
                                       Grid.Column="3"
                                       MinWidth="48"
                                       Margin="8,0,0,1"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Foreground="{ThemeResource TitleBarForegroundBrush}"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       Text="{TemplateBinding Title}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />
                            <TextBlock x:Name="PART_SubTitleText"
                                       Grid.Column="4"
                                       MinWidth="48"
                                       Margin="4,0,0,1"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                       Style="{StaticResource CaptionTextBlockStyle}"
                                       Text="{TemplateBinding Subtitle}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />
                            <Grid x:Name="PART_DragRegion"
                                  Grid.Column="2"
                                  Grid.ColumnSpan="8"
                                  Background="Transparent" />
                            <Button x:Name="PART_BackButton"
                                    Grid.Column="0"
                                    Style="{ThemeResource TitleBarBackButtonStyle}"
                                    ToolTipService.ToolTip="Back" />

                            <Button x:Name="PART_PaneButton"
                                    Grid.Column="1"
                                    Style="{StaticResource TitleBarPaneToggleButtonStyle}"
                                    ToolTipService.ToolTip="Back" />

                            <ContentPresenter x:Name="PART_ContentPresenter"
                                              Grid.Column="5"
                                              Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalContentAlignment="Stretch"
                                              Content="{TemplateBinding Content}" />
                            <ContentPresenter x:Name="PART_Footer"
                                              Grid.Column="6"
                                              Margin="40,0,0,0"
                                              HorizontalContentAlignment="Right"
                                              Content="{TemplateBinding Footer}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Copy of WinUI NavigationBackButtonNormalStyle - cannot use it as it picks up the generic.xaml version, not the WinUI version  -->
    <Style x:Key="TitleBarBackButtonStyle"
           TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource NavigationViewBackButtonBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForegroundChecked}" />
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="MaxHeight" Value="40" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="Content" Value="&#xE72B;" />
        <Setter Property="Padding" Value="12,4,12,4" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Padding="{TemplateBinding Padding}"
                          Background="{TemplateBinding Background}"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="Content.(AnimatedIcon.State)" Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="Content.(AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <muxc:AnimatedIcon x:Name="Content"
                                           Width="16"
                                           Height="16"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           muxc:AnimatedIcon.State="Normal"
                                           win:AutomationProperties.AccessibilityView="Raw">
                            <animatedvisuals:AnimatedBackVisualSource />
                            <muxc:AnimatedIcon.FallbackIconSource>
                                <muxc:FontIconSource FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}"
                                                     FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                                                     Glyph="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                                     MirroredWhenRightToLeft="True" />
                            </muxc:AnimatedIcon.FallbackIconSource>
                        </muxc:AnimatedIcon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Copy of WinUI PaneToggleButtonStyle - cannot use it as it picks up the generic.xaml version, not the WinUI version  -->
    <Style x:Key="TitleBarPaneToggleButtonStyle"
           TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource NavigationViewBackButtonBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForegroundChecked}" />
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="MaxHeight" Value="40" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="Content" Value="&#xE700;" />
        <Setter Property="Padding" Value="12,4,12,4" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Padding="{TemplateBinding Padding}"
                          Background="{TemplateBinding Background}"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="Content.(AnimatedIcon.State)" Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                                       Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="Content.(AnimatedIcon.State)" Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <muxc:AnimatedIcon x:Name="Content"
                                           Width="16"
                                           Height="16"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           muxc:AnimatedIcon.State="Normal"
                                           win:AutomationProperties.AccessibilityView="Raw">
                            <animatedvisuals:AnimatedGlobalNavigationButtonVisualSource />
                            <muxc:AnimatedIcon.FallbackIconSource>
                                <muxc:FontIconSource FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}"
                                                     FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                                                     Glyph="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                                     MirroredWhenRightToLeft="True" />
                            </muxc:AnimatedIcon.FallbackIconSource>
                        </muxc:AnimatedIcon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
